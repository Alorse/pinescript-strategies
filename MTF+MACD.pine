//@version=4
study(title="MTF + MACD [Alorse]", shorttitle = "MTF + MACD", format=format.price, overlay=false, resolution="")

txtVer = "2.0.0"
version = input(title="Version", type=input.string, defval=txtVer, options=[txtVer], tooltip="This is informational only, nothing will change.")
src = input(title="Source", type=input.source, defval=close)
// Getting inputs
macdGroup = "MACD Settings"
fast_length = input(title="Length   Fast", type=input.integer, defval=12, group=macdGroup, inline="macdLength")
slow_length = input(title="Slow", type=input.integer, defval=26, group=macdGroup, inline="macdLength")
signal_length = input(title="Signal Smoothing", type=input.integer, minval = 1, maxval = 50, defval = 9, group=macdGroup)
sma_source = input(title="Oscillator", type=input.string, defval="EMA", options=["SMA", "EMA"], group=macdGroup, inline="macdMa", tooltip="Moving Average Type")
sma_signal = input(title="Signal Line", type=input.string, defval="EMA", options=["SMA", "EMA"], group=macdGroup, inline="macdMa", tooltip="Moving Average Type")
// Plot colors
col_macd = input(#2962FF, "MACD Line  ", input.color, group="Color Settings", inline="MACD")
col_signal = input(#FF6D00, "Signal Line  ", input.color, group="Color Settings", inline="Signal")
showCross = input(title="Show Signals&MACD Cross", defval=true, group="Color Settings")
col_grow_above = input(#00796b, "Above   Grow", input.color, group="Histogram", inline="Above")
col_fall_above = input(#26a69a, "Fall", input.color, group="Histogram", inline="Above")
col_grow_below = input(#ef5350, "Below Grow", input.color, group="Histogram", inline="Below")
col_fall_below = input(#b71c1c, "Fall", input.color, group="Histogram", inline="Below")
// Calculating
fast_ma = sma_source == "SMA" ? sma(src, fast_length) : ema(src, fast_length)
slow_ma = sma_source == "SMA" ? sma(src, slow_length) : ema(src, slow_length)
macd = fast_ma - slow_ma
signal = sma_signal == "SMA" ? sma(macd, signal_length) : ema(macd, signal_length)
hist = macd - signal
plot(hist, title="Histogram", style=plot.style_columns, color=color.new((hist>=0 ? (hist[1] < hist ? col_grow_above : col_fall_above) : (hist[1] < hist ? col_grow_below : col_fall_below) ),0))
plot(macd, title="MACD", color=color.new(col_macd, 10))
plot(signal, title="Signal", color=color.new(col_signal, 10))

//Divergences
lbR = input(title="Pivot Lookback   Right", defval=2, group="Divergences", inline="pivot")
lbL = input(title="Left", defval=2, group="Divergences", inline="pivot")
rangeUpper = input(title="Lookback Range   Max", defval=60, group="Divergences", inline="range")
rangeLower = input(title="Min", defval=6, group="Divergences", inline="range")
plotBull = input(title="Plot Bullish", defval=true, group="Divergences")
plotHiddenBull = input(title="Plot Hidden Bullish", defval=false, group="Divergences")
plotBear = input(title="Plot Bearish", defval=true, group="Divergences")
plotHiddenBear = input(title="Plot Hidden Bearish", defval=false, group="Divergences")

bearColor = color.red
bullColor = color.green
hiddenBullColor = color.new(color.yellow,50)
hiddenBearColor = color.new(color.yellow,50)
textColor = color.white
noneColor = color.new(color.white, 100)

plFound = na(pivotlow(macd, lbL, lbR)) ? false : true
phFound = na(pivothigh(macd, lbL, lbR)) ? false : true

_inRange(cond) =>
    bars = barssince(cond == true)
    rangeLower <= bars and bars <= rangeUpper

//Get MA Values
maA = input(title='Periods', minval=1, defval=50, group="MTF EMA 1", inline="ma1")
resA = input(title='Resolution', type=input.resolution, defval="15", group="MTF EMA 1", inline="ma1")
maB = input(title='Periods', minval=1, defval=50, group="MTF EMA 2", inline="ma2")
resB = input(title='Resolution', type=input.resolution, defval="60", group="MTF EMA 2", inline="ma2")

//get data
dataA = security(syminfo.tickerid, resA, ema(src, maA))
dataB = security(syminfo.tickerid, resB, ema(src, maB))
trendBull = dataA > dataB and macd[lbR] < 0
trendBear = dataA < dataB and macd[lbR] > 0

//------------------------------------------------------------------------------
// Regular Bullish

// Osc: Higher Low
oscHL = macd[lbR] > valuewhen(plFound, macd[lbR], 1) and _inRange(plFound[1])
// Price: Lower Low
priceLL = low[lbR] < valuewhen(plFound, low[lbR], 1)
bullCond = plotBull and priceLL and oscHL and plFound
plot(plFound ? macd[lbR] : na, offset=-lbR, title="Regular Bullish", linewidth=2, color=(bullCond ? color.new(bullColor, trendBull ? 0 : 50) : noneColor))
plotshape(bullCond ? macd[lbR] : na, offset=-lbR, title="Regular Bullish Label", text="⬆", style=shape.labelup, location=location.absolute, color=color.new(bullColor,100), textcolor=color.new(bullColor, trendBull ? 0 : 50))

//------------------------------------------------------------------------------
// Hidden Bullish

// Osc: Lower Low
oscLL = macd[lbR] < valuewhen(plFound, macd[lbR], 1) and _inRange(plFound[1])
// Price: Higher Low
priceHL = low[lbR] > valuewhen(plFound, low[lbR], 1)
hiddenBullCond = plotHiddenBull and priceHL and oscLL and plFound
plot(plFound ? macd[lbR] : na, offset=-lbR, title="Hidden Bullish", linewidth=2, color=(hiddenBullCond ? hiddenBullColor : noneColor))
plotshape(hiddenBullCond ? macd[lbR] : na, offset=-lbR, title="Hidden Bullish Label", text="⬆", style=shape.labelup, location=location.absolute, color=color.new(bullColor,100), textcolor=hiddenBullColor)

//------------------------------------------------------------------------------
// Regular Bearish

// Osc: Lower High
oscLH = macd[lbR] < valuewhen(phFound, macd[lbR], 1) and _inRange(phFound[1])
// Price: Higher High
priceHH = high[lbR] > valuewhen(phFound, high[lbR], 1)
bearCond = plotBear and priceHH and oscLH and phFound
plot(phFound ? macd[lbR] : na, offset=-lbR, title="Regular Bearish", linewidth=2, color=(bearCond ? color.new(bearColor, trendBear ? 0 : 50) : noneColor))
plotshape(bearCond ? macd[lbR] : na, offset=-lbR, title="Regular Bearish Label", text="⬇", style=shape.labeldown, location=location.absolute, color=color.new(bearColor,100), textcolor=color.new(bearColor, trendBear ? 0 : 50))

//------------------------------------------------------------------------------
// Hidden Bearish
// Osc: Higher High
oscHH = macd[lbR] > valuewhen(phFound, macd[lbR], 1) and _inRange(phFound[1])
// Price: Lower High
priceLH = high[lbR] < valuewhen(phFound, high[lbR], 1)
hiddenBearCond = plotHiddenBear and priceLH and oscHH and phFound
plot(phFound ? macd[lbR] : na, offset=-lbR, title="Hidden Bearish", linewidth=2, color=(hiddenBearCond ? hiddenBearColor : noneColor))
plotshape(hiddenBearCond ? macd[lbR] : na, offset=-lbR, title="Hidden Bearish Label", text="⬇", style=shape.labeldown, location=location.absolute, color=color.new(bearColor,100), textcolor=hiddenBearColor)

plot(showCross and crossunder(macd, signal) and trendBear ? macd : na, style=plot.style_cross, color=color.red, linewidth = 3)
plot(showCross and crossover(macd, signal) and trendBull ? macd : na, style=plot.style_cross, color=color.green, linewidth = 3)

alertcondition((bullCond and trendBull ? macd[lbR] : na) or (bearCond and trendBear ? macd[lbR] : na), "Divergence", '{"text": "{{ticker}}: Divergence in {{interval}} minutes"}')
