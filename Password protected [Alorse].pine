//@author Alorse
//@version=4
strategy(title="Password for my scripts [Alorse]", shorttitle="Password protected [Alorse]", overlay=true)

// Password
passCode = "TV123"
password = input(title="Password", type=input.string, defval=passCode, tooltip="Try with: TV123")

// Bollinger Bands
upper = sma(close, 20) + 2 * stdev(close, 20)
lower = sma(close, 20) - 2 * stdev(close, 20)

//Strategy
len = input(200, minval=1, title="Length")
buy = close < lower and close > ema(close, len)
sell = close > upper and close < ema(close, len)

// Check if the password is correct
validPass = password == passCode

longStop  = strategy.position_avg_price * (1 - 0.03)
shortStop = strategy.position_avg_price * (1 + 0.03)

strategy.entry("Long", true, when=buy and validPass)
strategy.close("Long", when=close > upper, comment="SL")
strategy.exit("SL", "Long", stop=longStop)
strategy.entry("Short", false, when=sell and validPass)
strategy.close("Short", when=close < lower, comment="SS")
strategy.exit("SL", "Short", stop=shortStop)

var lastTradeId = "somerandomid"
var lastTradeWasLoss = false
barsWait = 5 // our N

if (strategy.losstrades[0] > strategy.losstrades[1])
    // last trade was a loss
    lastTradeWasLoss := true
    
if (strategy.wintrades[0] > strategy.wintrades[1])
    // successful trade, reset
    lastTradeWasLoss := false

// Check if strategy has no open position
isFlat = strategy.position_size == 0

// Check if strategy had no open position for more than N bars
if (isFlat and lastTradeWasLoss and barssince(isFlat) > barsWait)
    // it's been more than N bars since last position was flat
    
    // store last trade id for later use
    lastTradeId := "somethingotherrandom"
    
    // execute trade
    // strategy.entry(id=lastTradeId, ...)