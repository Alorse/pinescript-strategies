//@version=5
// Based on Divergence MACD [mado]
// URL: https://es.tradingview.com/script/ABhNVSWq/
indicator(title='MACD + Divergences [Alorse]', shorttitle='MACD Divergence', format=format.price)
// Getting inputs
src = input(title='Source', defval=close)
fast_length = input(title='Fast Length', defval=12)
slow_length = input(title='Slow Length', defval=26)
signal_length = input.int(title='Signal Smoothing', minval=1, maxval=50, defval=9)
sma_source = input.string(title='Oscillator MA Type', defval='EMA', options=['SMA', 'EMA'])
sma_signal = input.string(title='Signal Line MA Type', defval='EMA', options=['SMA', 'EMA'])

col_macd = input.color(#2962FF, 'MACD Line  ', group='Color Settings', inline='MACD')
col_signal = input.color(#FF6D00, 'Signal Line  ', group='Color Settings', inline='Signal')
showCross = input.bool(title='Show Signals&MACD Cross', defval=true, group='Color Settings')
col_grow_above = input.color(#00796b, 'Above   Grow', group='Histogram', inline='Above')
col_fall_above = input.color(#26a69a, 'Fall', group='Histogram', inline='Above')
col_grow_below = input.color(#ef5350, 'Below Grow', group='Histogram', inline='Below')
col_fall_below = input.color(#b71c1c, 'Fall', group='Histogram', inline='Below')

fast_ma = sma_source == 'SMA' ? ta.sma(src, fast_length) : ta.ema(src, fast_length)
slow_ma = sma_source == 'SMA' ? ta.sma(src, slow_length) : ta.ema(src, slow_length)
macd = fast_ma - slow_ma
signal = sma_signal == 'SMA' ? ta.sma(macd, signal_length) : ta.ema(macd, signal_length)
hist = macd - signal
osc = macd

plot(hist, title='Histogram', style=plot.style_columns, color=color.new(hist >= 0 ? hist[1] < hist ? col_grow_above : col_fall_above : hist[1] < hist ? col_grow_below : col_fall_below, 0))
plot(macd, title='MACD', color=color.new(col_macd, 10))
plot(signal, title='Signal', color=color.new(col_signal, 10))

//Divergences
lbR = input.int(title='Pivot Lookback Right', defval=5, group='Divergences')
lbL = input.int(title='Pivot Lookback Left', defval=5, group='Divergences')
rangeUpper = input.int(title='Max of Lookback Range', defval=60, group='Divergences')
rangeLower = input.int(title='Min of Lookback Range', defval=5, group='Divergences')
plotBull = input.bool(title='Plot Bullish', defval=true, group='Divergences')
plotBear = input.bool(title='Plot Bearish', defval=true, group='Divergences')
plotHiddenBull = input.bool(title='Plot Hidden Bullish', defval=false, group='Divergences')
plotHiddenBear = input.bool(title='Plot Hidden Bearish', defval=false, group='Divergences')

bearColor = color.red
bullColor = color.green
hiddenBullColor = color.new(color.yellow, 50)
hiddenBearColor = color.new(color.yellow, 50)
textColor = color.white
noneColor = color.new(color.white, 100)

plFound = na(ta.pivotlow(osc, lbL, lbR)) ? false : true
phFound = na(ta.pivothigh(osc, lbL, lbR)) ? false : true

_inRange(cond) =>
    bars = ta.barssince(cond == true)
    rangeLower <= bars and bars <= rangeUpper

//------------------------------------------------------------------------------
// Regular Bullish

// Osc: Higher Low
oscHL = osc[lbR] > ta.valuewhen(plFound, osc[lbR], 1) and _inRange(plFound[1])

// Price: Lower Low
priceLL = low[lbR] < ta.valuewhen(plFound, low[lbR], 1)

bullCond = plotBull and priceLL and oscHL and plFound

plot(plFound ? osc[lbR] : na, offset=-lbR, title='Regular Bullish', linewidth=2, color=bullCond ? bullColor : noneColor)
// plotshape(bullCond ? osc[lbR] : na,offset=-lbR,title="Regular Bullish Label",text="D",style=shape.labelup,location=location.absolute,color=bullColor,textcolor=textColor,transp=0)

//------------------------------------------------------------------------------
// Hidden Bullish

// Osc: Lower Low
oscLL = osc[lbR] < ta.valuewhen(plFound, osc[lbR], 1) and _inRange(plFound[1])

// Price: Higher Low
priceHL = low[lbR] > ta.valuewhen(plFound, low[lbR], 1)

hiddenBullCond = plotHiddenBull and priceHL and oscLL and plFound

plot(plFound ? osc[lbR] : na, offset=-lbR, title='Hidden Bullish', linewidth=2, color=hiddenBullCond ? hiddenBullColor : noneColor)
plotshape(hiddenBullCond ? osc[lbR] : na, offset=-lbR, title='Hidden Bullish Label', text='H', style=shape.labelup, location=location.absolute, color=bullColor, textcolor=textColor)

//------------------------------------------------------------------------------
// Regular Bearish

// Osc: Lower High
oscLH = osc[lbR] < ta.valuewhen(phFound, osc[lbR], 1) and _inRange(phFound[1])

// Price: Higher High
priceHH = high[lbR] > ta.valuewhen(phFound, high[lbR], 1)

bearCond = plotBear and priceHH and oscLH and phFound

plot(phFound ? osc[lbR] : na, offset=-lbR, title='Regular Bearish', linewidth=2, color=bearCond ? bearColor : noneColor)
// plotshape(bearCond ? osc[lbR] : na, offset=-lbR, title="Regular Bearish Label", text="⬇", style=shape.labeldown, location=location.absolute, color=color.new(bearColor,100), textcolor=color.new(bearColor, trendBear ? 0 : 50))

//------------------------------------------------------------------------------
// Hidden Bearish

// Osc: Higher High
oscHH = osc[lbR] > ta.valuewhen(phFound, osc[lbR], 1) and _inRange(phFound[1])

// Price: Lower High
priceLH = high[lbR] < ta.valuewhen(phFound, high[lbR], 1)

hiddenBearCond = plotHiddenBear and priceLH and oscHH and phFound

plot(phFound ? osc[lbR] : na, offset=-lbR, title='Hidden Bearish', linewidth=2, color=hiddenBearCond ? hiddenBearColor : noneColor)
plotshape(hiddenBearCond ? osc[lbR] : na, offset=-lbR, title='Hidden Bearish Label', text='H', style=shape.labeldown, location=location.absolute, color=bearColor, textcolor=textColor)

plot(showCross and ta.cross(osc, signal) ? osc : na, style=plot.style_cross, color=color.new(color.silver, 0), linewidth=2)

alertcondition((bullCond ? macd[lbR] : na) or (bearCond ? macd[lbR] : na), 'Divergence', '{"text": "{{ticker}}: Divergence in {{interval}} minutes"}')

