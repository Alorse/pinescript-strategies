//@version=5
indicator(title='MTF + MACD [Alorse]', shorttitle='MTF + MACD', format=format.price, overlay=false, timeframe='')

txtVer = '2.0.0'
version = input.string(title='Version', defval=txtVer, options=[txtVer], tooltip='This is informational only, nothing will change.')
src = input(title='Source', defval=close)
// Getting inputs
macdGroup = 'MACD Settings'
fast_length = input.int(title='Length   Fast', defval=12, group=macdGroup, inline='macdLength')
slow_length = input.int(title='Slow', defval=26, group=macdGroup, inline='macdLength')
signal_length = input.int(title='Signal Smoothing', minval=1, maxval=50, defval=9, group=macdGroup)
sma_source = input.string(title='Oscillator', defval='EMA', options=['SMA', 'EMA'], group=macdGroup, inline='macdMa', tooltip='Moving Average Type')
sma_signal = input.string(title='Signal Line', defval='EMA', options=['SMA', 'EMA'], group=macdGroup, inline='macdMa', tooltip='Moving Average Type')
// Plot colors
col_macd = input.color(#2962FF, 'MACD Line  ', group='Color Settings', inline='MACD')
col_signal = input.color(#FF6D00, 'Signal Line  ', group='Color Settings', inline='Signal')
showCross = input.bool(title='Show Signals&MACD Cross', defval=true, group='Color Settings')
col_grow_above = input.color(#00796b, 'Above   Grow', group='Histogram', inline='Above')
col_fall_above = input.color(#26a69a, 'Fall', group='Histogram', inline='Above')
col_grow_below = input.color(#ef5350, 'Below Grow', group='Histogram', inline='Below')
col_fall_below = input.color(#b71c1c, 'Fall', group='Histogram', inline='Below')
// Calculating
fast_ma = sma_source == 'SMA' ? ta.sma(src, fast_length) : ta.ema(src, fast_length)
slow_ma = sma_source == 'SMA' ? ta.sma(src, slow_length) : ta.ema(src, slow_length)
macd = fast_ma - slow_ma
signal = sma_signal == 'SMA' ? ta.sma(macd, signal_length) : ta.ema(macd, signal_length)
hist = macd - signal
plot(hist, title='Histogram', style=plot.style_columns, color=color.new(hist >= 0 ? hist[1] < hist ? col_grow_above : col_fall_above : hist[1] < hist ? col_grow_below : col_fall_below, 0))
plot(macd, title='MACD', color=color.new(col_macd, 10))
plot(signal, title='Signal', color=color.new(col_signal, 10))

//Divergences
lbR = input.int(title='Pivot Lookback   Right', defval=2, group='Divergences', inline='pivot')
lbL = input.int(title='Left', defval=2, group='Divergences', inline='pivot')
rangeUpper = input.int(title='Lookback Range   Max', defval=60, group='Divergences', inline='range')
rangeLower = input.int(title='Min', defval=6, group='Divergences', inline='range')
plotBull = input.bool(title='Plot Bullish', defval=true, group='Divergences')
plotHiddenBull = input.bool(title='Plot Hidden Bullish', defval=false, group='Divergences')
plotBear = input.bool(title='Plot Bearish', defval=true, group='Divergences')
plotHiddenBear = input.bool(title='Plot Hidden Bearish', defval=false, group='Divergences')

bearColor = color.red
bullColor = color.green
hiddenBullColor = color.new(color.yellow, 50)
hiddenBearColor = color.new(color.yellow, 50)
textColor = color.white
noneColor = color.new(color.white, 100)

plFound = na(ta.pivotlow(macd, lbL, lbR)) ? false : true
phFound = na(ta.pivothigh(macd, lbL, lbR)) ? false : true

_inRange(cond) =>
    bars = ta.barssince(cond == true)
    rangeLower <= bars and bars <= rangeUpper

//Get MA Values
maA = input.int(title='Periods', minval=1, defval=50, group='MTF EMA 1', inline='ma1')
resA = input.timeframe(title='Resolution', defval='15', group='MTF EMA 1', inline='ma1')
maB = input.int(title='Periods', minval=1, defval=50, group='MTF EMA 2', inline='ma2')
resB = input.timeframe(title='Resolution', defval='60', group='MTF EMA 2', inline='ma2')

//get data
dataA = request.security(syminfo.tickerid, resA, ta.ema(src, maA))
dataB = request.security(syminfo.tickerid, resB, ta.ema(src, maB))
trendBull = dataA > dataB and macd[lbR] < 0
trendBear = dataA < dataB and macd[lbR] > 0

//------------------------------------------------------------------------------
// Regular Bullish

// Osc: Higher Low
oscHL = macd[lbR] > ta.valuewhen(plFound, macd[lbR], 1) and _inRange(plFound[1])
// Price: Lower Low
priceLL = low[lbR] < ta.valuewhen(plFound, low[lbR], 1)
bullCond = plotBull and priceLL and oscHL and plFound
plot(plFound ? macd[lbR] : na, offset=-lbR, title='Regular Bullish', linewidth=2, color=bullCond ? color.new(bullColor, trendBull ? 0 : 50) : noneColor)
plotshape(bullCond ? macd[lbR] : na, offset=-lbR, title='Regular Bullish Label', text='⬆', style=shape.labelup, location=location.absolute, color=color.new(bullColor, 100), textcolor=color.new(bullColor, trendBull ? 0 : 50))

//------------------------------------------------------------------------------
// Hidden Bullish

// Osc: Lower Low
oscLL = macd[lbR] < ta.valuewhen(plFound, macd[lbR], 1) and _inRange(plFound[1])
// Price: Higher Low
priceHL = low[lbR] > ta.valuewhen(plFound, low[lbR], 1)
hiddenBullCond = plotHiddenBull and priceHL and oscLL and plFound
plot(plFound ? macd[lbR] : na, offset=-lbR, title='Hidden Bullish', linewidth=2, color=hiddenBullCond ? hiddenBullColor : noneColor)
plotshape(hiddenBullCond ? macd[lbR] : na, offset=-lbR, title='Hidden Bullish Label', text='⬆', style=shape.labelup, location=location.absolute, color=color.new(bullColor, 100), textcolor=hiddenBullColor)

//------------------------------------------------------------------------------
// Regular Bearish

// Osc: Lower High
oscLH = macd[lbR] < ta.valuewhen(phFound, macd[lbR], 1) and _inRange(phFound[1])
// Price: Higher High
priceHH = high[lbR] > ta.valuewhen(phFound, high[lbR], 1)
bearCond = plotBear and priceHH and oscLH and phFound
plot(phFound ? macd[lbR] : na, offset=-lbR, title='Regular Bearish', linewidth=2, color=bearCond ? color.new(bearColor, trendBear ? 0 : 50) : noneColor)
plotshape(bearCond ? macd[lbR] : na, offset=-lbR, title='Regular Bearish Label', text='⬇', style=shape.labeldown, location=location.absolute, color=color.new(bearColor, 100), textcolor=color.new(bearColor, trendBear ? 0 : 50))

//------------------------------------------------------------------------------
// Hidden Bearish
// Osc: Higher High
oscHH = macd[lbR] > ta.valuewhen(phFound, macd[lbR], 1) and _inRange(phFound[1])
// Price: Lower High
priceLH = high[lbR] < ta.valuewhen(phFound, high[lbR], 1)
hiddenBearCond = plotHiddenBear and priceLH and oscHH and phFound
plot(phFound ? macd[lbR] : na, offset=-lbR, title='Hidden Bearish', linewidth=2, color=hiddenBearCond ? hiddenBearColor : noneColor)
plotshape(hiddenBearCond ? macd[lbR] : na, offset=-lbR, title='Hidden Bearish Label', text='⬇', style=shape.labeldown, location=location.absolute, color=color.new(bearColor, 100), textcolor=hiddenBearColor)

plot(showCross and ta.crossunder(macd, signal) and trendBear ? macd : na, style=plot.style_cross, color=color.new(color.red, 0), linewidth=3)
plot(showCross and ta.crossover(macd, signal) and trendBull ? macd : na, style=plot.style_cross, color=color.new(color.green, 0), linewidth=3)

alertcondition((bullCond and trendBull ? macd[lbR] : na) or (bearCond and trendBear ? macd[lbR] : na), 'Divergence', '{"text": "{{ticker}}: Divergence in {{interval}} minutes"}')

