//
//@author Alorse
//@version=5
strategy('Bollinger Bands Winner PRO [Alorse]', shorttitle='BB Winner PRO [Alorse]', overlay=true, pyramiding=0, currency=currency.USD, default_qty_type=strategy.percent_of_equity, initial_capital=1000, default_qty_value=10, commission_type=strategy.commission.percent, commission_value=0.01)

txtVer = '2.0.8'
version = input.string(title='Version', defval=txtVer, options=[txtVer], tooltip='This is informational only, nothing will change.')

// Bollinger Bands
bbGroup = 'Bollindger Bands'
src = input.source(title='Source', defval=close, group=bbGroup)
length = input.int(20, title='Length', group=bbGroup)
mult = input.float(2.0, title='StdDev', minval=0.001, maxval=5, group=bbGroup)

basis = ta.sma(src, length)
dev = mult * ta.stdev(src, length)
upper = basis + dev
lower = basis - dev

pb1 = plot(upper, color=color.new(color.teal, 50), title='Upper')
pb2 = plot(lower, color=color.new(color.teal, 50), title='Lower')
fill(pb1, pb2, color=color.new(color.teal, 98), title='Background')
plot(basis, 'Basis', color=color.new(color.orange, 50))

// RSI
rsiGroup = 'RSI Filter'
hasRSI = input.bool(true, title='╔══════   Use RSI   ══════╗', group=rsiGroup, tooltip='Long: Only when RSI is below 45\nShort: Only when RSI is above 55')
aboveRSI = input.int(45, title='Above', inline='Above', group=rsiGroup)
srcRSI = input.source(close, title='Source', group=rsiGroup)
lenRSI = input.int(14, title='Length', minval=1, group=rsiGroup)
belowRSI = input.int(55, title='Below', inline='Above', group=rsiGroup)
RSI = ta.rsi(srcRSI, lenRSI)

// Aroon
aroonGroup = 'Aroon Filter'
hasAroon = input.bool(false, title='╔══════ Use Aroon ══════╗', group=aroonGroup, tooltip='Aroon plays a key role in this strategy. It acts as a confirmation that the asset is currently in an uptrend. On the other hand, it acts as a stop if market conditions deteriorate. The strategy uses an Aroon Indicator set to 288 periods to provide a longer-term view on market conditions, not being heavily dependent on short-term volatility.')
lengthAr = input.int(288, title='Periods', minval=1, group=aroonGroup)
Confirmation = input.int(90, title='Confirmation', group=aroonGroup, inline='Above')
Stop = input.int(70, title='Stop', group=aroonGroup, inline='Above')
AroonUP = 100 * (ta.highestbars(high, lengthAr + 1) + lengthAr) / lengthAr
// AroonDown = 100 * (lowestbars(low, lengthAr+1) + lengthAr)/lengthAr
buyAroonFilter = hasAroon ? AroonUP > Confirmation : true
sellAroonFilter = hasAroon ? AroonUP < Stop : true

// Moving Average
maGroup = 'Moving Average'
hasMa = input.bool(true, title='╔══════   Use MA   ══════╗', group=maGroup, tooltip='asd')
maType = input.string(title='Moving Average Type', defval='EMA', options=['EMA', 'SMA'], group=maGroup)
maLen = input.int(200, minval=1, title='Moving Average length', group=maGroup)
ma = maType == 'EMA' ? ta.ema(src, maLen) : ta.sma(src, maLen)
plot(hasMa ? ma : na, title='Moving Average', linewidth=1, color=color.new(color.blue, 10))
buyMaFilter = hasMa ? close > ma : true
sellMaFilter = hasMa ? close < ma : true

// Strategy Conditions
stratGroup = 'Strategy'
candleper = input.int(title='Candle %', minval=0, maxval=100, defval=30, group=stratGroup, tooltip='When the candle\'s body passes the Bollinger Bands in this percentage, a new entry will open in the opposite direction.') * 0.01
cbSize = input.bool(false, title='Include shadow as part of the body', group=stratGroup)
showLong = input.bool(true, title='Long entries', group=stratGroup)
showShort = input.bool(false, title='Short entries', group=stratGroup)
// secureEntry = input(false, title="Only secure entries", group=stratGroup, tooltip="With this option the profit is almost guaranteed, but you will greatly limit the field of action of the strategy.")
closeEarly = input.bool(true, title='Close position early', group=stratGroup, tooltip='The position will be closed when the price touches the Bollinger Bands in the opposite direction and trade is in profit.')
candle_size = cbSize ? high - low : close > open ? close - open : open - close
buyzone = candle_size * candleper + low
sellzone = high - candle_size * candleper

body_size = close > open ? close - open : open - close
bs60 = body_size * 0.6
bsBuy = low + bs60
bsSell = high - bs60
seBuy = true  //secureEntry ? not (bsBuy < lower) : true
seSell = true  //secureEntry ? not (bsSell > upper) : true

buyRSIFilter = hasRSI ? RSI < aboveRSI : true
sellRSIFilter = hasRSI ? RSI > belowRSI : true

bought = strategy.opentrades[0] == 1 and strategy.position_size[0] > strategy.position_size[1]
entry_price = ta.valuewhen(bought, open, 0)

closeLongEarly = close > entry_price and closeEarly
closeShortEarly = close < entry_price and closeEarly

buy = buyzone < lower and close < open and buyRSIFilter and buyAroonFilter and buyMaFilter and seBuy
sell = sellzone > upper and close > open and sellRSIFilter and sellAroonFilter and sellMaFilter and seSell

// Stop Loss
slGroup = 'Stop Loss'
useSL = input.bool(true, title='╔══════   Enable   ══════╗', group=slGroup, tooltip='If you are using this strategy for Scalping or Futures market, we do not recommend using Stop Loss.')
SLbased = input.string(title='Based on', defval='Percent', options=['ATR', 'Percent'], group=slGroup, tooltip='ATR: Average True Range\nPercent: eg. 5%.')
multiATR = input.float(7.0, title='ATR   Mult', group=slGroup, inline='atr')
lengthATR = input.int(14, title='Length', group=slGroup, inline='atr')
SLPercent = input.float(7, title='Percent', group=slGroup) * 0.01
plotSL = input.bool(true, title='Show SL', group=slGroup)

longStop = 0.0
shortStop = 0.0

if SLbased == 'ATR'
    longStop := ta.valuewhen(buy, low, 0) - ta.valuewhen(buy, ta.rma(ta.tr(true), lengthATR), 0) * multiATR
    longStopPrev = nz(longStop[1], longStop)
    longStop := close[1] > longStopPrev ? math.max(longStop, longStopPrev) : longStop

    shortStop := ta.valuewhen(sell, ta.rma(ta.tr(true), lengthATR), 0) * multiATR + ta.valuewhen(sell, high, 0)
    shortStopPrev = nz(shortStop[1], shortStop)
    shortStop := close[1] > shortStopPrev ? math.max(shortStop, shortStopPrev) : shortStop
    shortStop
if SLbased == 'Percent'
    longStop := strategy.position_avg_price * (1 - SLPercent)
    shortStop := strategy.position_avg_price * (1 + SLPercent)
    shortStop

// Print Stop Loss
plotshape(plotSL and useSL and strategy.position_size > 0 ? longStop : na, title='Long Stop Loss', color=color.new(color.green, 0), location=location.absolute)
plotshape(plotSL and useSL and strategy.position_size < 0 ? shortStop : na, title='Short Stop Loss', color=color.new(color.red, 0), location=location.absolute)


buyExit = RSI < 70 and close < entry_price and buyzone > upper ? false : buyzone > upper
sellExit = RSI > 30 and close > entry_price and sellzone < lower ? false : sellzone < lower
if showLong
    strategy.entry('Long', strategy.long, when=buy)
    if closeLongEarly and useSL
        strategy.exit('Exit', 'Long', limit=upper, stop=longStop)
    if not useSL and closeLongEarly
        strategy.exit('Exit', 'Long', limit=upper)
    if not showShort
        strategy.close('Long', when=buyExit, comment='Exit')
if showShort
    strategy.entry('Short', strategy.short, when=sell)
    if closeShortEarly and useSL
        strategy.exit('Exit', 'Short', limit=lower, stop=shortStop)
    if not useSL and closeLongEarly
        strategy.exit('Exit', 'Short', limit=lower)
    if not showLong
        strategy.close('Short', when=sellExit, comment='Exit')

