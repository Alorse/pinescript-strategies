//
//@author Alorse
//@version=5
strategy('MEMA + BB + RSI [Alorse]', overlay=true, pyramiding=0, currency=currency.USD, default_qty_type=strategy.percent_of_equity, initial_capital=1000, default_qty_value=20, commission_type=strategy.commission.percent, commission_value=0.01)

txtVer = '1.0.0'
version = input.string(title='Version', defval=txtVer, options=[txtVer], tooltip='This is informational only, nothing will change.\n\nEntry conditions:\nTales')
src = input(title='Source', defval=close)

// EMA
ma1 = input.int(10, minval=1, title='Periods', group='Moving Average')
res1 = input.timeframe(title='Timeframe', defval='1D', group='Moving Average')
ma2 = input.int(55, minval=1, title='Periods', group='Moving Average')
res2 = input.timeframe(title='Timeframe', defval='1D', group='Moving Average')
// Calculate moving averages
maPlot1 = request.security(syminfo.tickerid, res1, ta.ema(src, ma1))
maPlot2 = request.security(syminfo.tickerid, res2, ta.ema(src, ma2))

// Plot moving averages
plot(maPlot1, color=color.new(color.purple, 0), title='Moving Average', linewidth=1)
plot(maPlot2, color=color.new(color.blue, 0), title='Moving Average', linewidth=2)

// Bollinger Bands
bbGroup = 'Bollindger Bands'
isBB = input.bool(true, title='╔═════ Show Bollinger Bands ═════╗', group=bbGroup, tooltip='If you don\'t want to see Bollinger Bands')
length = input.int(20, title='Length', group=bbGroup)
mult = input.float(2.0, title='StdDev', minval=0.001, maxval=5, group=bbGroup)
offset = input.int(0, 'Offset', minval=-500, maxval=500, group=bbGroup)

basis = ta.sma(src, length)
dev = mult * ta.stdev(src, length)
upper = basis + dev
lower = basis - dev

plot(isBB ? basis : na, 'Basis', color=color.new(color.orange, 75), offset=offset)
pb1 = plot(isBB ? upper : na, color=color.new(color.lime, 75), title='Upper')
pb2 = plot(isBB ? lower : na, color=color.new(color.lime, 75), title='Lower')
fill(pb1, pb2, color=color.new(color.lime, 99), title='Background')

// RSI
rsiGroup = 'RSI'
lenRSI = input.int(14, title='Length', minval=1, group=rsiGroup)
oversold = input.int(71, title='Oversold', minval=1, group=rsiGroup)
RSI = ta.rsi(src, lenRSI)

// Strategy Conditions
stratGroup = 'Strategy'
showLong = input.bool(true, title='Long entries', group=stratGroup)
showShort = input.bool(false, title='Short entries', group=stratGroup)
entryLong = close > maPlot1 and low < lower //and high < basis
exitLong =  RSI > oversold //or (high[1] > upper and close < basis)
entryShort = close < maPlot1 and high > upper and RSI > 50
exitShort = close < lower
closeAfterXBars = input.bool(false, title='Close after X # bars', group=stratGroup, tooltip='If trade is in profit')
xBars = input.int(12, title='# bars', group=stratGroup)

slGroup = 'Stop Loss'
useSL = input.bool(false, title='╔══════   Enable   ══════╗', group=slGroup, tooltip='If you are using this strategy for Scalping or Futures market, we do not recommend using Stop Loss.')
SLPercent = input.float(10, title='Percent', group=slGroup) * 0.01


tpGroup = 'Take Profit'
useTP = input.bool(false, title='╔══════   Enable   ══════╗', group=tpGroup)
TPPercent = input.float(10, title='Percent', group=tpGroup) * 0.01

longStop = strategy.position_avg_price * (1 - SLPercent)
shortStop = strategy.position_avg_price * (1 + SLPercent)

longTP = strategy.position_avg_price * (1 + TPPercent)
shortTP = strategy.position_avg_price * (1 - TPPercent)

ifLongTP = useTP ? close > longTP and close > basis : false
ifShortTP = useTP ? close < shortTP and close < basis : false

exitLong := exitLong or close < maPlot2 or ifLongTP // Tendece changes
exitShort := exitShort or close > maPlot2 or ifShortTP // Tendece changes

longIsOpen = strategy.position_size > 0
shortIsOpen = strategy.position_size < 0

bought = strategy.opentrades[0] == 1 and strategy.position_size[0] > strategy.position_size[1]
entry_price = ta.valuewhen(bought, open, 0)

var int nPastBars = 0
if strategy.position_size > 0
    nPastBars := nPastBars + 1
    nPastBars
if strategy.position_size == 0
    nPastBars := 0
    nPastBars
if closeAfterXBars
    exitLong := nPastBars >= xBars and close > upper and close > entry_price ? true : exitLong
    exitLong

if showLong
    strategy.entry('Long', strategy.long, when=entryLong and not shortIsOpen)
    strategy.close('Long', when=exitLong)
    if useSL
        strategy.exit('Stop Loss', 'Long', stop=longStop)
if showShort
    strategy.entry('Short', strategy.short, when=entryShort and not longIsOpen)
    strategy.close('Short', when=exitShort, comment='Exit')
    if useSL
        strategy.exit('Stop Loss', 'Short', stop=shortStop)

// if entryLong
//     label.new(bar_index, low, 'Buy', color=color.green, style=label.style_label_up, textcolor=color.white, size=size.small)
// if exitLong
//     label.new(bar_index, high, 'Sell', color=color.red, style=label.style_label_down, textcolor=color.white, size=size.small)

